-> VIEWs
	-> São visões. São camdas para as tabelas
	-> São 'alias' para uma ou mais queries.
	-> Aceitam comandos de SELECT, INSERT, UPDATE e DELETE
	-> Aos invés de fazer um direto na tabela, se cria uma view.
	-> Se tiver JOIN, view vai aceita apenas o SELECT
	-> VIEW temporária só existe dentro da mesma sessão
	-> Não se define DATA TYPE para as VIEWs
	-> Serve como uma janela antes de inserir, atualizar os dados em uma tabela

-> IDEMPOTÊNCIA
	-> OR REPLACE

	# 	CREATE OR REPLACE VIEW vw_bancos AS (
			SELECT	numero, nome, ativo
			FROM banco
		);

	# 	SELECT numero, nome, ativo
		FROM vw_bancos;

	# 	INSERT INTO vw_bancos (numero, nome, ativo)
		VALUES (100, 'Banco Itau', true);

	# 	UPDATE vw_bancos SET nome = 'Banco novo'
		WHERE numero = 15;

	# 	DELETE FROM vw_bancos
		WHERE numero = 30;

	-> TEMPORARY

	#	CREATE OR REPLACE TEMPORARY view_bancos AS (
			SELECT numero, nome, ativo
			FROM banco
		);

	#	SELECT numero, nome, ativo
		FROM view_bancos;

	-> RECURSIVE - view que chama ela mesma, como se fosse um loop
			-> Obritório a existência dos campos da VIEW
			-> UNION ALL
	
	#	CREATE OR REPLACE RECURSIVE VIEW (nome_da_view)(campos_da_view) AS (
			SELECT base
			UNION ALL
			SELECT campos
			FROM tabela_base
			JOIN (nome_da_view)
		);

	#	CREATE TABLE IF NOT EXISTS funcionarios (
			id SERIAL NOT NULL,
			nome VARCHAR(50),
			gerente INTEGER,
			PRIMARY KEY (id)
			FOREIGN KEY (gerente) REFERENCES funcionarios (id)
		);

		INSERT INTO funcionarios (nome,gerente) VALUES ('Rafael', null);
		INSERT INTO funcionarios (nome,gerente) VALUES ('João', 1);
		INSERT INTO funcionarios (nome,gerente) VALUES ('Claudia', 1);
		INSERT INTO funcionarios (nome,gerente) VALUES ('Kleber', 2);
		INSERT INTO funcionarios (nome,gerente) VALUES ('Wagner', 3);


	#	CREATE OR REPLACE RECURSIVE VIEW vw_funcional (id, gerente, funcionario) AS (
			SELECT id, CAST (" AS VARCHAR) AS gerente, nome
			FROM funcionarios
			WHERE gerente IS NULL
			UNION ALL
			SELECT funcionarios.id, gerentes.nome, funcionarios.nome
			FROM funcionarios
			JOIN vw_funcionarios ON vw_funcionarios.id = funcionarios.gerente
			JOIN funcionarios_gerentes ON gerentes.id = vw_funcionarios.id
		);

		SELECT id gerente, funcionario
		FROM vw_funcionarios

	-> WITH OPTIONS

	# 	CREATE OR REPLACE VIEW vw_bancos AS (
			SELECT numero, nome, ativo
			FROM banco
			WHERE ativo IS TRUE 
		) WITH LOCAL CHECK OPTION;

	# 	INSERT INTO vw_bancos (numero, nome, ativo)
		VALEUS (100, 'Banco Bradesco', FALSE)
		-- Vai dar um erro, eu exigi TRUE no campo ativo e tentei inserir um false

		-> CASCADED -> valida as opções do view atual e das views a qual ela faz referência

	# 	CREATE OR REPLACE VIEW vw_bancos AS (
			SELECT numero, nome, ativo
			FROM vw_bancoS
			WHERE numero > 100
		) WITH CASCADED CHECK OPTION;	





		













	





